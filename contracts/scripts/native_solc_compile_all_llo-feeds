#!/usr/bin/env bash

set -e

echo " ┌──────────────────────────────────────────────┐"
echo " │    Compiling Low Latency Oracle contracts... │"
echo " └──────────────────────────────────────────────┘"

SOLC_VERSION="0.8.19"
OPTIMIZE_RUNS=1000000


SCRIPTPATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
python3 -m pip install --require-hashes -r "$SCRIPTPATH"/requirements.txt
solc-select install $SOLC_VERSION
solc-select use $SOLC_VERSION
export SOLC_VERSION=$SOLC_VERSION

ROOT="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; cd ../../ && pwd -P )"
LLO_SOLC_ROOL="$ROOT"/contracts/solc/v$SOLC_VERSION
CONTRACTS_ROOT="$ROOT/contracts/src/v0.8"
LLO_CONTRACTS_ROOT="$CONTRACTS_ROOT/llo-feeds"

compileContract () {
  local contract
  contractPath="$1"
  contract=$(basename "$1" ".sol")

  solc --overwrite --optimize --optimize-runs $OPTIMIZE_RUNS --metadata-hash none \
      -o "$LLO_SOLC_ROOL/$contract" \
      --abi --bin --allow-paths "$CONTRACTS_ROOT" \
      "$contractPath" # Should be full path to the contract, like $LLO_CONTRACTS_ROOT/Verifier.sol
}

contractDirs=(
  "$LLO_CONTRACTS_ROOT"
  "$LLO_CONTRACTS_ROOT/test/mocks"
  "$LLO_CONTRACTS_ROOT/dev"
  "$LLO_CONTRACTS_ROOT/test/mocks"
)

for dir in "${contractDirs[@]}"; do
  echo "Searching in: $dir" # Debugging line to verify the directory being searched
  find "$dir" -type f -name "*.sol" | while read -r contractPath; do
    echo "Compiling: $contractPath" # Debugging line to verify the contract being compiled
    compileContract "$contractPath"
  done
done

## Below is targetting llo-feeds/*.sol,
#find "$directory" -type f -name "*.sol" -path "*/test/mocks/*" -exec compileContract {} \;
#
#compileContract llo-feeds/Verifier.sol
#compileContract llo-feeds/VerifierProxy.sol
#compileContract llo-feeds/FeeManager.sol
#compileContract llo-feeds/FeeManagerNoNative.sol
#compileContract llo-feeds/RewardManager.sol
#
#
## Test | Mocks
#compileContract llo-feeds/test/mocks/ErroredVerifier.sol
#compileContract llo-feeds/test/mocks/ExposedVerifier.sol
#
## LLO
#compileContract llo-feeds/dev/ChannelConfigStore.sol
#compileContract llo-feeds/dev/ChannelVerifier.sol
#compileContract llo-feeds/dev/test/mocks/ExposedChannelVerifier.sol
