name: Run Live Integration Test
description: Runs an integration test for a live testnet
inputs:
  test:
    description: The Go name of the test to run
    required: true
  product:
    description: Name of the product that's getting tested
    required: true
  network:
    description: Human name of the network that's getting tested
    required: true

runs:
  using: composite
  steps:
    - name: Run Tests
      uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@e865e376b8c2d594028c8d645dd6c47169b72974 # v2.2.16
      env:
        PYROSCOPE_SERVER: ${{ secrets.QA_PYROSCOPE_INSTANCE }}
        PYROSCOPE_ENVIRONMENT: ci-smoke-${{ matrix.product }}-optimism-goerli
        PYROSCOPE_KEY: ${{ secrets.QA_PYROSCOPE_KEY }}
      with:
        test_command_to_run: cd ./integration-tests && go test -timeout 1h -count=1 -json -test.parallel=1 -run ${{ inputs.test }} ./smoke 2>&1 | tee /tmp/gotest.log | gotestfmt
        test_download_vendor_packages_command: cd ./integration-tests && go mod download
        cl_repo: ${{ env.CHAINLINK_IMAGE }}
        cl_image_tag: ${{ github.sha }}
        aws_registries: ${{ secrets.QA_AWS_ACCOUNT_NUMBER }}
        dockerhub_username: ${{ secrets.DOCKERHUB_READONLY_USERNAME }}
        dockerhub_password: ${{ secrets.DOCKERHUB_READONLY_PASSWORD }}
        artifacts_location: ./integration-tests/smoke/logs
        publish_check_name: ${{ inputs.network }} ${{ matrix.product }} Smoke Test Results
        token: ${{ secrets.GITHUB_TOKEN }}
        go_mod_path: ./integration-tests/go.mod
        cache_key_id: core-e2e-${{ env.MOD_CACHE_VERSION }}
        cache_restore_only: "true"
        QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
        QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
        QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
    - name: Collect Metrics
      if: always()
      id: collect-gha-metrics
      uses: smartcontractkit/push-gha-metrics-action@d1618b772a97fd87e6505de97b872ee0b1f1729a # v2.0.2
      with:
        basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
        hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
        this-job-name: ${{ inputs.network }} ${{ inputs.product }} Smoke Tests
        test-results-file: '{"testType":"go","filePath":"/tmp/gotest.log"}'
      continue-on-error: true
