name: 'Setup E2E Tests'
description: 'Setup and generate test matrices for Docker and Kubernetes tests.'
inputs:
  config-file-path:
    required: true
    description: 'Path to the configuration file for E2E tests'
  enable_check_test_configurations:
    required: true
    description: 'Enable checking of test configurations'
  test_ids:
    required: false
    description: 'Test IDs to filter on'
  test_workflow:
    required: false
    description: 'Workflow name for filtering tests'
outputs:
  run-docker-tests:
    description: 'Indicator to run Docker tests'
    value: ${{ steps.check-matrices.outputs.run-docker-tests }}
  run-k8s-tests:
    description: 'Indicator to run Kubernetes tests'
    value: ${{ steps.check-matrices.outputs.run-k8s-tests }}
  docker-matrix:
    description: 'JSON matrix for Docker tests'
    value: ${{ steps.set-docker-matrix.outputs.matrix }}
  k8s-runner-matrix:
    description: 'JSON matrix for Kubernetes tests'
    value: ${{ steps.set-k8s-runner-matrix.outputs.matrix }}

runs:
  using: 'composite'
  steps:
    - name: Install jq
      run: sudo apt-get install jq
      shell: bash

    - name: Check Test Configurations
      if: ${{ fromJSON(inputs.enable_check_test_configurations) }}
      run: |
        if ! go run integration-tests/e2e_tests_ci_tool/main.go check-tests ./integration-tests .github/e2e-tests.yml; then
          echo "::error::Some E2E test configurations have to be added to .github/e2e-tests.yml." && exit 1
        fi
      shell: bash

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21.7'

    - name: Generate Docker Tests Matrix
      id: set-docker-matrix
      run: |
        cd integration-tests/e2e_tests_ci_tool/
        MATRIX_JSON=$(go run main.go filter --file ${{ inputs.config-file-path }} --test-type 'docker' --test_ids '${{ inputs.test_ids }}' --workflow '${{ inputs.test_workflow }}')
        echo "Docker tests:"
        echo "$MATRIX_JSON" | jq
        echo "matrix=$MATRIX_JSON" >> $GITHUB_ENV
      shell: bash

    - name: Generate K8s Tests Matrix
      id: set-k8s-runner-matrix
      run: |
        cd integration-tests/e2e_tests_ci_tool/
        MATRIX_JSON=$(go run main.go filter --file ${{ inputs.config-file-path }} --test-type 'k8s-remote-runner' --test_ids '${{ inputs.test_ids }}' --workflow '${{ inputs.test_workflow }}')
        echo "K8s tests:"
        echo "$MATRIX_JSON" | jq
        echo "matrix=$MATRIX_JSON" >> $GITHUB_ENV
      shell: bash

    - name: Check Test Matrices
      id: check-matrices
      run: |
        DOCKER_MATRIX_EMPTY=$(echo '${{ steps.set-docker-matrix.outputs.matrix }}' | jq '.tests == null or .tests == []')
        K8S_MATRIX_EMPTY=$(echo '${{ steps.set-k8s-runner-matrix.outputs.matrix }}' | jq '.tests == null or .tests == []')

        # Check if jq commands succeeded
        if [ $? -ne 0 ]; then
          echo "JSON parse error occurred."
          exit 1
        fi

        if [[ "$DOCKER_MATRIX_EMPTY" == "true" ]]; then
          echo "run-docker-tests=false" >> $GITHUB_ENV
        else
          echo "run-docker-tests=true" >> $GITHUB_ENV
        fi
        if [[ "$K8S_MATRIX_EMPTY" == "true" ]]; then
          echo "run-k8s-tests=false" >> $GITHUB_ENV
        else
          echo "run-k8s-tests=true" >> $GITHUB_ENV
        fi

        # Check if both matrices are empty
        if [[ "$DOCKER_MATRIX_EMPTY" == "true" ]] && [[ "$K8S_MATRIX_EMPTY" == "true" ]]; then
          echo "No tests found for inputs: '${{ toJson(inputs) }}'. Both Docker and Kubernetes tests matrices are empty"
          exit 1
        fi
      shell: bash   