package plugins

import (
	"github.com/smartcontractkit/chainlink-common/pkg/loop"
)

// RegistrarConfig generates contains static configuration inher
type RegistrarConfig interface {
	RegisterLOOP(loopId string, cmdName string) (*RegisteredLoop, error)
	GRPCOpts() loop.GRPCOpts
}

type registrarConfig struct {
	grpcOpts           loop.GRPCOpts
	loopRegistrationFn func(id, cmd string) (*RegisteredLoop, error)
}

// NewRegistrarConfig creates a RegistarConfig
// loopRegistrationFn must act as a global registry function of LOOPs and must be idempotent.
// The [func() *exec.Cmd] for a LOOP should be generated by calling [RegistrarConfig.RegisterLOOP]
func NewRegistrarConfig(grpcOpts loop.GRPCOpts, loopRegistrationFn func(id, cmd string) (*RegisteredLoop, error)) RegistrarConfig {
	return &registrarConfig{
		grpcOpts:           grpcOpts,
		loopRegistrationFn: loopRegistrationFn,
	}
}

// RegisterLOOP calls the configured loopRegistrationFn. The loopRegistrationFn must act as a global registry for LOOPs and must be idempotent.
func (pc *registrarConfig) RegisterLOOP(id, cmd string) (*RegisteredLoop, error) {
	return pc.loopRegistrationFn(id, cmd)
}

func (pc *registrarConfig) GRPCOpts() loop.GRPCOpts {
	return pc.grpcOpts
}
